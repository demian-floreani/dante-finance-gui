{"version":3,"sources":["state/transactions/hooks.tsx","components/Input/Input.tsx","components/TokenInput/TokenInput.tsx","components/ModalActions/ModalActions.tsx","hooks/useAllowance.ts","components/UnlockWallet/UnlockWallet.tsx","hooks/useApprove.ts","components/Spacer/Spacer.tsx","hooks/useBondStats.ts","../node_modules/@material-ui/core/esm/Card/Card.js","assets/img/hell.png","components/Button/Button.tsx","views/Pit/components/ExchangeModal.tsx","hooks/useCatchError.ts","views/Pit/components/ExchangeCard.tsx","hooks/useCashPriceInLastTWAP.ts","views/Pit/components/ExchangeStat.tsx","tomb-finance/constants.ts","views/Pit/Pit.tsx"],"names":["useTransactionAdder","useWallet","chainId","account","dispatch","useDispatch","useCallback","response","summary","approval","hash","Error","addTransaction","from","useAllTransactions","state","useSelector","transactions","useHasPendingApproval","tokenAddress","spender","allTransactions","useMemo","Object","keys","some","tx","receipt","Date","getTime","addedTime","isTransactionRecent","StyledInputWrapper","styled","div","props","theme","color","grey","borderRadius","spacing","StyledInput","input","Input","endAdornment","onChange","placeholder","startAdornment","value","StyledTokenInput","StyledSpacer","StyledTokenAdornmentWrapper","StyledMaxText","TokenInput","max","symbol","onSelectMax","toLocaleString","Button","size","variant","onClick","StyledModalActions","StyledModalAction","ModalActions","children","l","React","Children","toArray","length","map","child","i","useAllowance","token","pendingApproval","useState","allowance","setAllowance","fetchAllowance","a","useEffect","catch","err","console","log","stack","UnlockWallet","Box","style","position","top","left","transform","AccountButton","ApprovalState","APPROVE_AMOUNT","ethers","constants","MaxUint256","APPROVE_BASE_AMOUNT","BigNumber","useApprove","address","currentAllowance","approvalState","lt","PENDING","NOT_APPROVED","APPROVED","UNKNOWN","approve","error","Spacer","s","useContext","ThemeContext","useBondStats","stat","setStat","tombFinance","useTombFinance","fetchBondPrice","getBondStat","refreshInterval","setInterval","config","clearInterval","Card","ref","classes","className","_props$raised","raised","other","_objectWithoutProperties","Paper","_extends","clsx","root","elevation","withStyles","overflow","name","module","exports","StyledButton","button","boxShadow","disabled","fontSize","padding","undefined","StyledLink","Link","StyledExternalLink","buttonColor","buttonSize","buttonPadding","href","text","to","teal","primary","main","ButtonChild","target","ExchangeModal","title","description","onConfirm","onDismiss","action","tokenName","val","setVal","fullBalance","getFullDisplayBalance","handleChange","e","currentTarget","handleSelectMax","Modal","ModalTitle","Label","useCatchError","addPopup","useAddPopup","promise","message","includes","StyledCardTitle","StyledExchanger","StyledExchangeArrow","StyledToken","StyledCardActions","StyledDesc","span","StyledCardContentInner","ExchangeCard","fromToken","fromTokenName","toToken","toTokenName","priceDesc","onExchange","disabledDescription","catchError","Treasury","contracts","approveStatus","balance","useTokenBalance","useModal","onPresent","backgroundColor","CardContent","TokenSymbol","useCashPriceInLastTWAP","price","setPrice","fetchCashPrice","getTombPriceInLastTWAP","ExchangeStat","DECIMALS_18","pow","BOND_REDEEM_PRICE_BN","mul","BackgroundImage","createGlobalStyle","PitImage","StyledBond","StyledCardWrapper","StyledStatsWrapper","Pit","useRouteMatch","path","bondStat","cashPrice","bondBalance","TBOND","handleBuyBonds","amount","buyBonds","Number","toFixed","handleRedeemBonds","redeemBonds","isBondRedeemable","gt","isBondPurchasable","tokenInFtm","Page","display","margin","DANTE","Math","floor","priceInDollars","getDisplayBalance","eq"],"mappings":"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","file":"static/js/8.e92f0250.chunk.js","sourcesContent":["import { TransactionResponse } from '@ethersproject/providers';\r\nimport { useCallback, useMemo } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useWallet } from 'use-wallet';\r\n\r\nimport { AppDispatch, AppState } from '../index';\r\nimport { addTransaction, clearAllTransactions } from './actions';\r\nimport { TransactionDetails } from './reducer';\r\n\r\n// helper that can take a ethers library transaction response and add it to the list of transactions\r\nexport function useTransactionAdder(): (\r\n  response: TransactionResponse,\r\n  customData?: { summary?: string; approval?: { tokenAddress: string; spender: string } },\r\n) => void {\r\n  const { chainId, account } = useWallet();\r\n  const dispatch = useDispatch<AppDispatch>();\r\n\r\n  return useCallback(\r\n    (\r\n      response: TransactionResponse,\r\n      { summary, approval }: { summary?: string; approval?: { tokenAddress: string; spender: string } } = {},\r\n    ) => {\r\n      if (!account) return;\r\n      if (!chainId) return;\r\n\r\n      const { hash } = response;\r\n      if (!hash) {\r\n        throw Error('No transaction hash found.');\r\n      }\r\n      dispatch(addTransaction({ hash, from: account, chainId, approval, summary }));\r\n    },\r\n    [dispatch, chainId, account],\r\n  );\r\n}\r\n\r\n// returns all the transactions for the current chain\r\nexport function useAllTransactions(): { [txHash: string]: TransactionDetails } {\r\n  const { chainId } = useWallet();\r\n  const state = useSelector<AppState, AppState['transactions']>((state) => state.transactions);\r\n\r\n  return chainId ? state[chainId] ?? {} : {};\r\n}\r\n\r\nexport function useIsTransactionPending(transactionHash?: string): boolean {\r\n  const transactions = useAllTransactions();\r\n  if (!transactionHash || !transactions[transactionHash]) {\r\n    return false;\r\n  }\r\n  return !transactions[transactionHash].receipt;\r\n}\r\n\r\n/**\r\n * Returns whether a transaction happened in the last day (86400 seconds * 1000 milliseconds / second)\r\n * @param tx to check for recency\r\n */\r\nexport function isTransactionRecent(tx: TransactionDetails): boolean {\r\n  return new Date().getTime() - tx.addedTime < 86_400_000;\r\n}\r\n\r\n// returns whether a token has a pending approval transaction\r\nexport function useHasPendingApproval(tokenAddress: string | undefined, spender: string | undefined): boolean {\r\n  const allTransactions = useAllTransactions();\r\n  return useMemo(\r\n    () =>\r\n      typeof tokenAddress === 'string' &&\r\n      typeof spender === 'string' &&\r\n      Object.keys(allTransactions).some((hash) => {\r\n        const tx = allTransactions[hash];\r\n        if (!tx) return false;\r\n        if (tx.receipt) {\r\n          return false;\r\n        } else {\r\n          const approval = tx.approval;\r\n          if (!approval) return false;\r\n          return approval.spender === spender && approval.tokenAddress === tokenAddress && isTransactionRecent(tx);\r\n        }\r\n      }),\r\n    [allTransactions, spender, tokenAddress],\r\n  );\r\n}\r\n\r\nexport function useClearAllTransactions(): { clearAllTransactions: () => void } {\r\n  const { chainId } = useWallet();\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  return {\r\n    clearAllTransactions: useCallback(() => dispatch(clearAllTransactions({ chainId })), [dispatch, chainId]),\r\n  };\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport interface InputProps {\r\n  endAdornment?: React.ReactNode;\r\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void;\r\n  placeholder?: string;\r\n  startAdornment?: React.ReactNode;\r\n  value: string;\r\n}\r\n\r\nconst Input: React.FC<InputProps> = ({ endAdornment, onChange, placeholder, startAdornment, value }) => {\r\n  return (\r\n    <StyledInputWrapper>\r\n      {!!startAdornment && startAdornment}\r\n      <StyledInput placeholder={placeholder} value={value} onChange={onChange} />\r\n      {!!endAdornment && endAdornment}\r\n    </StyledInputWrapper>\r\n  );\r\n};\r\n\r\nconst StyledInputWrapper = styled.div`\r\n  align-items: center;\r\n  background-color: ${(props) => props.theme.color.grey[200]};\r\n  border-radius: ${(props) => props.theme.borderRadius}px;\r\n  display: flex;\r\n  padding: 0 ${(props) => props.theme.spacing[3]}px;\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\n  background: none;\r\n  border: 0;\r\n  color: ${(props) => props.theme.color.grey[600]};\r\n  font-size: 18px;\r\n  flex: 1;\r\n  height: 56px;\r\n  margin: 0;\r\n  padding: 0;\r\n  outline: none;\r\n`;\r\n\r\nexport default Input;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { Button } from '@material-ui/core';\r\nimport Input, { InputProps } from '../Input';\r\n\r\ninterface TokenInputProps extends InputProps {\r\n  max: number | string;\r\n  symbol: string;\r\n  onSelectMax?: () => void;\r\n}\r\n\r\nconst TokenInput: React.FC<TokenInputProps> = ({ max, symbol, onChange, onSelectMax, value }) => {\r\n  return (\r\n    <StyledTokenInput>\r\n      <StyledMaxText>\r\n        {max.toLocaleString()} {symbol} Available\r\n      </StyledMaxText>\r\n      <Input\r\n        endAdornment={\r\n          <StyledTokenAdornmentWrapper>\r\n            {/* <StyledTokenSymbol>{symbol}</StyledTokenSymbol> */}\r\n            <StyledSpacer />\r\n            <div>\r\n              <Button size=\"small\" color=\"primary\" variant=\"contained\" onClick={onSelectMax}>\r\n                Max\r\n              </Button>\r\n            </div>\r\n          </StyledTokenAdornmentWrapper>\r\n        }\r\n        onChange={onChange}\r\n        placeholder=\"0\"\r\n        value={value}\r\n      />\r\n    </StyledTokenInput>\r\n  );\r\n};\r\n\r\n/*\r\n            <div>\r\n              <Button size=\"sm\" text=\"Max\" />\r\n            </div>\r\n*/\r\n\r\nconst StyledTokenInput = styled.div``;\r\n\r\nconst StyledSpacer = styled.div`\r\n  width: ${(props) => props.theme.spacing[3]}px;\r\n`;\r\n\r\nconst StyledTokenAdornmentWrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n`;\r\n\r\nconst StyledMaxText = styled.div`\r\n  align-items: center;\r\n  color: ${(props) => props.theme.color.grey[400]};\r\n  display: flex;\r\n  font-size: 14px;\r\n  font-weight: 700;\r\n  height: 44px;\r\n  justify-content: flex-end;\r\n`;\r\n\r\nexport default TokenInput;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ModalActions: React.FC = ({ children }) => {\r\n  const l = React.Children.toArray(children).length;\r\n  return (\r\n    <StyledModalActions>\r\n      {React.Children.map(children, (child, i) => (\r\n        <>\r\n          <StyledModalAction>{child}</StyledModalAction>\r\n          {i < l - 1 && <StyledSpacer />}\r\n        </>\r\n      ))}\r\n    </StyledModalActions>\r\n  );\r\n};\r\n\r\nconst StyledModalActions = styled.div`\r\n  align-items: center;\r\n  background-color: ${(props) => props.theme.color.grey[100]}00;\r\n  display: flex;\r\n  height: 96px;\r\n  margin: ${(props) => props.theme.spacing[4]}px ${(props) => -props.theme.spacing[4]}px\r\n    ${(props) => -props.theme.spacing[4]}px;\r\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\r\n`;\r\n\r\nconst StyledModalAction = styled.div`\r\n  flex: 1;\r\n`;\r\n\r\nconst StyledSpacer = styled.div`\r\n  width: ${(props) => props.theme.spacing[4]}px;\r\n`;\r\n\r\nexport default ModalActions;\r\n","import { useCallback, useEffect, useState } from 'react';\r\nimport { useWallet } from 'use-wallet';\r\nimport { BigNumber } from 'ethers';\r\nimport ERC20 from '../tomb-finance/ERC20';\r\n\r\nconst useAllowance = (token: ERC20, spender: string, pendingApproval?: boolean) => {\r\n  const [allowance, setAllowance] = useState<BigNumber>(null);\r\n  const { account } = useWallet();\r\n\r\n  const fetchAllowance = useCallback(async () => {\r\n    const allowance = await token.allowance(account, spender);\r\n    setAllowance(allowance);\r\n  }, [account, spender, token]);\r\n\r\n  useEffect(() => {\r\n    if (account && spender && token) {\r\n      fetchAllowance().catch((err) => console.log(`Failed to fetch allowance: ${err.stack}`));\r\n    }\r\n  }, [account, spender, token, pendingApproval, fetchAllowance]);\r\n\r\n  return allowance;\r\n};\r\n\r\nexport default useAllowance;\r\n","import React from 'react';\r\nimport { Box } from '@material-ui/core';\r\nimport AccountButton from '../Nav/AccountButton';\r\n\r\nconst UnlockWallet = () => {\r\n  return (\r\n    <Box style={{ position: 'absolute', top: '50%', left: '50%', transform: 'translate(-50%, -50%)' }}>\r\n      <AccountButton />\r\n      {/* <Button color=\"primary\" variant=\"contained\" onClick={() => connect('injected')}>Unlock Wallet</Button> */}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default UnlockWallet;\r\n","import { BigNumber, ethers } from 'ethers';\r\nimport { useCallback, useMemo } from 'react';\r\nimport { useHasPendingApproval, useTransactionAdder } from '../state/transactions/hooks';\r\nimport useAllowance from './useAllowance';\r\nimport ERC20 from '../tomb-finance/ERC20';\r\n\r\nconst APPROVE_AMOUNT = ethers.constants.MaxUint256;\r\nconst APPROVE_BASE_AMOUNT = BigNumber.from('1000000000000000000000000');\r\n\r\nexport enum ApprovalState {\r\n  UNKNOWN,\r\n  NOT_APPROVED,\r\n  PENDING,\r\n  APPROVED,\r\n}\r\n\r\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\r\nfunction useApprove(token: ERC20, spender: string): [ApprovalState, () => Promise<void>] {\r\n  const pendingApproval = useHasPendingApproval(token.address, spender);\r\n  const currentAllowance = useAllowance(token, spender, pendingApproval);\r\n\r\n  // check the current approval status\r\n  const approvalState: ApprovalState = useMemo(() => {\r\n    // we might not have enough data to know whether or not we need to approve\r\n    if (!currentAllowance) return ApprovalState.UNKNOWN;\r\n\r\n    // amountToApprove will be defined if currentAllowance is\r\n    return currentAllowance.lt(APPROVE_BASE_AMOUNT)\r\n      ? pendingApproval\r\n        ? ApprovalState.PENDING\r\n        : ApprovalState.NOT_APPROVED\r\n      : ApprovalState.APPROVED;\r\n  }, [currentAllowance, pendingApproval]);\r\n\r\n  const addTransaction = useTransactionAdder();\r\n\r\n  const approve = useCallback(async (): Promise<void> => {\r\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\r\n      console.error('approve was called unnecessarily');\r\n      return;\r\n    }\r\n\r\n    const response = await token.approve(spender, APPROVE_AMOUNT);\r\n    addTransaction(response, {\r\n      summary: `Approve ${token.symbol}`,\r\n      approval: {\r\n        tokenAddress: token.address,\r\n        spender: spender,\r\n      },\r\n    });\r\n  }, [approvalState, token, spender, addTransaction]);\r\n\r\n  return [approvalState, approve];\r\n}\r\n\r\nexport default useApprove;\r\n","import React, { useContext } from 'react';\r\nimport styled, { ThemeContext } from 'styled-components';\r\n\r\ninterface SpacerProps {\r\n  size?: 'sm' | 'md' | 'lg';\r\n}\r\n\r\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\r\n  const { spacing } = useContext(ThemeContext);\r\n\r\n  let s: number;\r\n  switch (size) {\r\n    case 'lg':\r\n      s = spacing[6];\r\n      break;\r\n    case 'sm':\r\n      s = spacing[2];\r\n      break;\r\n    case 'md':\r\n    default:\r\n      s = spacing[4];\r\n  }\r\n\r\n  return <StyledSpacer size={s} />;\r\n};\r\n\r\ninterface StyledSpacerProps {\r\n  size: number;\r\n}\r\n\r\nconst StyledSpacer = styled.div<StyledSpacerProps>`\r\n  height: ${(props) => props.size}px;\r\n  width: ${(props) => props.size}px;\r\n`;\r\n\r\nexport default Spacer;\r\n","import { useCallback, useEffect, useState } from 'react';\r\nimport useTombFinance from './useTombFinance';\r\nimport { TokenStat } from '../tomb-finance/types';\r\nimport config from '../config';\r\n\r\nconst useBondStats = () => {\r\n  const [stat, setStat] = useState<TokenStat>();\r\n  const tombFinance = useTombFinance();\r\n\r\n  const fetchBondPrice = useCallback(async () => {\r\n    setStat(await tombFinance.getBondStat());\r\n  }, [tombFinance]);\r\n\r\n  useEffect(() => {\r\n    fetchBondPrice().catch((err) => console.error(`Failed to fetch TBOND price: ${err.stack}`));\r\n    const refreshInterval = setInterval(fetchBondPrice, config.refreshInterval);\r\n    return () => clearInterval(refreshInterval);\r\n  }, [setStat, tombFinance, fetchBondPrice]);\r\n\r\n  return stat;\r\n};\r\n\r\nexport default useBondStats;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = /*#__PURE__*/React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","module.exports = __webpack_public_path__ + \"static/media/hell.9106162f.png\";","import React, { useContext, useMemo } from 'react';\r\nimport styled, { ThemeContext } from 'styled-components';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\ninterface ButtonProps {\r\n  children?: React.ReactNode;\r\n  disabled?: boolean;\r\n  href?: string;\r\n  onClick?: () => void;\r\n  size?: 'sm' | 'md' | 'lg';\r\n  text?: string;\r\n  to?: string;\r\n  variant?: 'default' | 'secondary' | 'tertiary';\r\n}\r\n\r\nconst Button: React.FC<ButtonProps> = ({ children, disabled, href, onClick, size, text, to, variant }) => {\r\n  const { color, spacing } = useContext(ThemeContext);\r\n\r\n  let buttonColor: string;\r\n  switch (variant) {\r\n    case 'secondary':\r\n      buttonColor = color.teal[200];\r\n      break;\r\n    case 'default':\r\n    default:\r\n      buttonColor = color.primary.main;\r\n  }\r\n\r\n  let boxShadow: string;\r\n  let buttonSize: number;\r\n  let buttonPadding: number;\r\n  let fontSize: number;\r\n  switch (size) {\r\n    case 'sm':\r\n      buttonPadding = spacing[3];\r\n      buttonSize = 36;\r\n      fontSize = 14;\r\n      break;\r\n    case 'lg':\r\n      buttonPadding = spacing[4];\r\n      buttonSize = 72;\r\n      fontSize = 16;\r\n      break;\r\n    case 'md':\r\n    default:\r\n      buttonPadding = spacing[4];\r\n      buttonSize = 56;\r\n      fontSize = 16;\r\n  }\r\n\r\n  const ButtonChild = useMemo(() => {\r\n    if (to) {\r\n      return <StyledLink to={to}>{text}</StyledLink>;\r\n    } else if (href) {\r\n      return (\r\n        <StyledExternalLink href={href} target=\"__blank\">\r\n          {text}\r\n        </StyledExternalLink>\r\n      );\r\n    } else {\r\n      return text;\r\n    }\r\n  }, [href, text, to]);\r\n\r\n  return (\r\n    <StyledButton\r\n      boxShadow={boxShadow}\r\n      color={buttonColor}\r\n      disabled={disabled}\r\n      fontSize={fontSize}\r\n      onClick={onClick}\r\n      padding={buttonPadding}\r\n      size={buttonSize}\r\n    >\r\n      {children}\r\n      {ButtonChild}\r\n    </StyledButton>\r\n  );\r\n};\r\n\r\ninterface StyledButtonProps {\r\n  boxShadow: string;\r\n  color: string;\r\n  disabled?: boolean;\r\n  fontSize: number;\r\n  padding: number;\r\n  size: number;\r\n}\r\n\r\nconst StyledButton = styled.button<StyledButtonProps>`\r\n  align-items: center;\r\n  background-color: ${(props) => props.theme.color.grey[900]};\r\n  border: 0;\r\n  border-radius: 12px;\r\n  box-shadow: ${(props) => props.boxShadow};\r\n  color: ${(props) => (!props.disabled ? props.color : `${props.color}55`)};\r\n  cursor: pointer;\r\n  display: flex;\r\n  font-size: ${(props) => props.fontSize}px;\r\n  font-weight: 700;\r\n  height: ${(props) => props.size}px;\r\n  justify-content: center;\r\n  outline: none;\r\n  padding-left: ${(props) => props.padding}px;\r\n  padding-right: ${(props) => props.padding}px;\r\n  pointer-events: ${(props) => (!props.disabled ? undefined : 'none')};\r\n  width: 100%;\r\n  &:hover {\r\n    background-color: ${(props) => props.color};\r\n    color: ${(props) => props.theme.color.grey[900]};\r\n  }\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n  align-items: center;\r\n  color: inherit;\r\n  display: flex;\r\n  flex: 1;\r\n  height: 56px;\r\n  justify-content: center;\r\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\r\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\r\n  text-decoration: none;\r\n`;\r\n\r\nconst StyledExternalLink = styled.a`\r\n  align-items: center;\r\n  color: inherit;\r\n  display: flex;\r\n  flex: 1;\r\n  height: 56px;\r\n  justify-content: center;\r\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\r\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\r\n  text-decoration: none;\r\n`;\r\n\r\nexport default Button;\r\n","import React, { useCallback, useMemo, useState } from 'react';\r\nimport Button from '../../../components/Button';\r\nimport Modal, { ModalProps } from '../../../components/Modal';\r\nimport ModalActions from '../../../components/ModalActions';\r\nimport ModalTitle from '../../../components/ModalTitle';\r\nimport TokenInput from '../../../components/TokenInput';\r\nimport { getFullDisplayBalance } from '../../../utils/formatBalance';\r\nimport { BigNumber } from 'ethers';\r\nimport Label from '../../../components/Label';\r\n\r\ninterface ExchangeModalProps extends ModalProps {\r\n  max: BigNumber;\r\n  onConfirm: (amount: string) => void;\r\n  title: string;\r\n  description: string;\r\n  action: string;\r\n  tokenName: string;\r\n}\r\n\r\nconst ExchangeModal: React.FC<ExchangeModalProps> = ({\r\n  max,\r\n  title,\r\n  description,\r\n  onConfirm,\r\n  onDismiss,\r\n  action,\r\n  tokenName,\r\n}) => {\r\n  const [val, setVal] = useState('');\r\n  const fullBalance = useMemo(() => getFullDisplayBalance(max), [max]);\r\n\r\n  const handleChange = useCallback((e: React.FormEvent<HTMLInputElement>) => setVal(e.currentTarget.value), [setVal]);\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    setVal(fullBalance);\r\n  }, [fullBalance, setVal]);\r\n\r\n  return (\r\n    <Modal>\r\n      <ModalTitle text={title} />\r\n      <TokenInput\r\n        value={val}\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        max={fullBalance}\r\n        symbol={tokenName}\r\n      />\r\n      <Label text={description} />\r\n      <ModalActions>\r\n        <Button text=\"Cancel\" variant=\"secondary\" onClick={onDismiss} />\r\n        <Button text={action} onClick={() => onConfirm(val)} />\r\n      </ModalActions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ExchangeModal;\r\n","import { useCallback } from 'react';\r\nimport { useAddPopup } from '../state/application/hooks';\r\n\r\nconst DEFAULT_ERROR_MSG = 'Unexpected error is occurred.';\r\n\r\nfunction useCatchError(): (promise: Promise<any>, message?: string) => void {\r\n  const addPopup = useAddPopup();\r\n\r\n  return useCallback(\r\n    (promise: Promise<any>, message = DEFAULT_ERROR_MSG) => {\r\n      promise.catch((err) => {\r\n        if (err.message.includes('User denied')) {\r\n          // User denied transaction signature on MetaMask.\r\n          return;\r\n        }\r\n        console.error(`Uncaught exception: ${err.stack}`);\r\n        addPopup({ error: { message, stack: err.stack } });\r\n      });\r\n    },\r\n    [addPopup],\r\n  );\r\n}\r\n\r\nexport default useCatchError;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { Button, Card } from '@material-ui/core';\r\n\r\n// import Button from '../../../components/Button';\r\n// import Card from '../../../components/Card';\r\nimport CardContent from '../../../components/CardContent';\r\nimport useTombFinance from '../../../hooks/useTombFinance';\r\nimport Label from '../../../components/Label';\r\nimport TokenSymbol from '../../../components/TokenSymbol';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowRight } from '@fortawesome/free-solid-svg-icons';\r\nimport useModal from '../../../hooks/useModal';\r\nimport ExchangeModal from './ExchangeModal';\r\nimport ERC20 from '../../../tomb-finance/ERC20';\r\nimport useTokenBalance from '../../../hooks/useTokenBalance';\r\nimport useApprove, { ApprovalState } from '../../../hooks/useApprove';\r\nimport useCatchError from '../../../hooks/useCatchError';\r\n\r\ninterface ExchangeCardProps {\r\n  action: string;\r\n  fromToken: ERC20;\r\n  fromTokenName: string;\r\n  toToken: ERC20;\r\n  toTokenName: string;\r\n  priceDesc: string;\r\n  onExchange: (amount: string) => void;\r\n  disabled?: boolean;\r\n  disabledDescription?: string;\r\n}\r\n\r\nconst ExchangeCard: React.FC<ExchangeCardProps> = ({\r\n  action,\r\n  fromToken,\r\n  fromTokenName,\r\n  toToken,\r\n  toTokenName,\r\n  priceDesc,\r\n  onExchange,\r\n  disabled = false,\r\n  disabledDescription,\r\n}) => {\r\n  const catchError = useCatchError();\r\n  const {\r\n    contracts: { Treasury },\r\n  } = useTombFinance();\r\n  const [approveStatus, approve] = useApprove(fromToken, Treasury.address);\r\n\r\n  const balance = useTokenBalance(fromToken);\r\n  const [onPresent, onDismiss] = useModal(\r\n    <ExchangeModal\r\n      title={action}\r\n      description={priceDesc}\r\n      max={balance}\r\n      onConfirm={(value) => {\r\n        onExchange(value);\r\n        onDismiss();\r\n      }}\r\n      action={action}\r\n      tokenName={fromTokenName}\r\n    />,\r\n  );\r\n  return (\r\n    <Card style={{backgroundColor: 'rgba(104, 76, 172, 0.9)'}}>\r\n      <CardContent>\r\n        <StyledCardContentInner>\r\n          <StyledCardTitle>{`${action} ${toTokenName}`}</StyledCardTitle>\r\n          <StyledExchanger>\r\n            <StyledToken>\r\n              <TokenSymbol symbol={fromToken.symbol} />\r\n              <h4>{fromTokenName}</h4>\r\n            </StyledToken>\r\n            <StyledExchangeArrow>\r\n              \r\n            </StyledExchangeArrow>\r\n            <StyledToken>\r\n              <TokenSymbol symbol={toToken.symbol} />\r\n              <h4>{toTokenName}</h4>\r\n            </StyledToken>\r\n          </StyledExchanger>\r\n          <StyledDesc>{priceDesc}</StyledDesc>\r\n          <StyledCardActions>\r\n            {approveStatus !== ApprovalState.APPROVED && !disabled ? (\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                disabled={approveStatus === ApprovalState.PENDING || approveStatus === ApprovalState.UNKNOWN}\r\n                onClick={() => catchError(approve(), `Unable to approve ${fromTokenName}`)}\r\n              >\r\n                {`Approve ${fromTokenName}`}\r\n              </Button>\r\n            ) : (\r\n              <Button color=\"primary\" variant=\"contained\" onClick={onPresent} disabled={disabled}>\r\n                {disabledDescription || action}\r\n              </Button>\r\n            )}\r\n          </StyledCardActions>\r\n        </StyledCardContentInner>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst StyledCardTitle = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  font-size: 28px;\r\n  font-weight: 700;\r\n  height: 64px;\r\n  justify-content: center;\r\n  margin-top: ${(props) => -props.theme.spacing[3]}px;\r\n`;\r\n\r\nconst StyledCardIcon = styled.div`\r\n  background-color: ${(props) => props.theme.color.grey[900]};\r\n  width: 72px;\r\n  height: 72px;\r\n  border-radius: 36px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-bottom: ${(props) => props.theme.spacing[2]}px;\r\n`;\r\n\r\nconst StyledExchanger = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  margin-bottom: ${(props) => props.theme.spacing[5]}px;\r\n`;\r\n\r\nconst StyledExchangeArrow = styled.div`\r\n  font-size: 20px;\r\n  padding-left: ${(props) => props.theme.spacing[3]}px;\r\n  padding-right: ${(props) => props.theme.spacing[3]}px;\r\n  padding-bottom: ${(props) => props.theme.spacing[4]}px;\r\n`;\r\n\r\nconst StyledToken = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst StyledCardActions = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: ${(props) => props.theme.spacing[3]}px;\r\n  width: 100%;\r\n`;\r\n\r\nconst StyledDesc = styled.span``;\r\n\r\nconst StyledCardContentInner = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport default ExchangeCard;\r\n","import { useCallback, useEffect, useState } from 'react';\r\nimport useTombFinance from './useTombFinance';\r\nimport config from '../config';\r\nimport { BigNumber } from 'ethers';\r\n\r\nconst useCashPriceInLastTWAP = () => {\r\n  const [price, setPrice] = useState<BigNumber>(BigNumber.from(0));\r\n  const tombFinance = useTombFinance();\r\n\r\n  const fetchCashPrice = useCallback(async () => {\r\n    setPrice(await tombFinance.getTombPriceInLastTWAP());\r\n  }, [tombFinance]);\r\n\r\n  useEffect(() => {\r\n    fetchCashPrice().catch((err) => console.error(`Failed to fetch TOMB price: ${err.stack}`));\r\n    const refreshInterval = setInterval(fetchCashPrice, config.refreshInterval);\r\n    return () => clearInterval(refreshInterval);\r\n  }, [setPrice, tombFinance, fetchCashPrice]);\r\n\r\n  return price;\r\n};\r\n\r\nexport default useCashPriceInLastTWAP;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { Card } from '@material-ui/core';\r\n\r\ninterface ExchangeStatProps {\r\n  tokenName: string;\r\n  description: string;\r\n  price: string;\r\n}\r\n\r\nconst ExchangeStat: React.FC<ExchangeStatProps> = ({ tokenName, description, price }) => {\r\n  return (\r\n    <Card style={{backgroundColor: 'rgba(104, 76, 172, 0.9)'}}>\r\n      <StyledCardContentInner>\r\n        <StyledCardTitle>{`💰 ${tokenName} = ${price} FTM`}</StyledCardTitle>\r\n        <StyledDesc>{description}</StyledDesc>\r\n      </StyledCardContentInner>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst StyledCardTitle = styled.div`\r\n  font-size: 20px;\r\n  font-weight: 700;\r\n  margin-bottom: ${(props) => props.theme.spacing[2]}px;\r\n`;\r\n\r\nconst StyledDesc = styled.span`\r\n  //color: ${(props) => props.theme.color.grey[300]};\r\n  text-align: center;\r\n`;\r\n\r\nconst StyledCardContentInner = styled.div`\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  padding: ${(props) => props.theme.spacing[2]}px;\r\n`;\r\n\r\nexport default ExchangeStat;\r\n","import { BigNumber } from 'ethers';\r\n\r\nexport const DECIMALS_18 = BigNumber.from(10).pow(18);\r\n\r\nexport const BOND_REDEEM_PRICE = 1.01;\r\nexport const BOND_REDEEM_PRICE_BN = DECIMALS_18.mul(101).div(100);\r\n","import React, { useCallback, useMemo } from 'react';\r\nimport Page from '../../components/Page';\r\nimport PitImage from '../../assets/img/hell.png';\r\nimport { createGlobalStyle } from 'styled-components';\r\nimport { Route, Switch, useRouteMatch } from 'react-router-dom';\r\nimport { useWallet } from 'use-wallet';\r\nimport UnlockWallet from '../../components/UnlockWallet';\r\nimport PageHeader from '../../components/PageHeader';\r\nimport ExchangeCard from './components/ExchangeCard';\r\nimport styled from 'styled-components';\r\nimport Spacer from '../../components/Spacer';\r\nimport useBondStats from '../../hooks/useBondStats';\r\nimport useTombFinance from '../../hooks/useTombFinance';\r\nimport useCashPriceInLastTWAP from '../../hooks/useCashPriceInLastTWAP';\r\nimport { useTransactionAdder } from '../../state/transactions/hooks';\r\nimport ExchangeStat from './components/ExchangeStat';\r\nimport useTokenBalance from '../../hooks/useTokenBalance';\r\nimport { getDisplayBalance } from '../../utils/formatBalance';\r\nimport { BOND_REDEEM_PRICE, BOND_REDEEM_PRICE_BN } from '../../tomb-finance/constants';\r\n\r\nconst BackgroundImage = createGlobalStyle`\r\n  body {\r\n    background: url(${PitImage}) no-repeat !important;\r\n    background-size: cover !important;\r\n  }\r\n`;\r\n\r\nconst Pit: React.FC = () => {\r\n  const { path } = useRouteMatch();\r\n  const { account } = useWallet();\r\n  const tombFinance = useTombFinance();\r\n  const addTransaction = useTransactionAdder();\r\n  const bondStat = useBondStats();\r\n  const cashPrice = useCashPriceInLastTWAP();\r\n\r\n  const bondBalance = useTokenBalance(tombFinance?.TBOND);\r\n\r\n  const handleBuyBonds = useCallback(\r\n    async (amount: string) => {\r\n      const tx = await tombFinance.buyBonds(amount);\r\n      addTransaction(tx, {\r\n        summary: `Buy ${Number(amount).toFixed(2)} TBOND with ${amount} TOMB`,\r\n      });\r\n    },\r\n    [tombFinance, addTransaction],\r\n  );\r\n\r\n  const handleRedeemBonds = useCallback(\r\n    async (amount: string) => {\r\n      const tx = await tombFinance.redeemBonds(amount);\r\n      addTransaction(tx, { summary: `Redeem ${amount} TBOND` });\r\n    },\r\n    [tombFinance, addTransaction],\r\n  );\r\n  const isBondRedeemable = useMemo(() => cashPrice.gt(BOND_REDEEM_PRICE_BN), [cashPrice]);\r\n  const isBondPurchasable = useMemo(() => Number(bondStat?.tokenInFtm) < 1.0, [bondStat]);\r\n\r\n  return (\r\n    <Switch>\r\n      <Page>\r\n        <BackgroundImage />\r\n        {!!account ? (\r\n          <>\r\n            {/*<Route exact path={path}>\r\n              <PageHeader icon={'🏦'} title=\"Buy & Redeem Bonds\" subtitle=\"Earn premiums upon redemption\" />\r\n        </Route>*/}\r\n            <h2 style={{display:'table', padding:'10px', backgroundColor: 'rgba(104, 76, 172, 0.9)', color:'#FFF', margin: '0px auto 0px auto' }}>Inferno</h2>\r\n\r\n            <StyledBond>\r\n              <StyledCardWrapper>\r\n                <ExchangeCard\r\n                  action=\"Purchase\"\r\n                  fromToken={tombFinance.DANTE}\r\n                  fromTokenName=\"TOMB\"\r\n                  toToken={tombFinance.TBOND}\r\n                  toTokenName=\"TBOND\"\r\n                  priceDesc={\r\n                    !isBondPurchasable\r\n                      ? 'TOMB is over peg'\r\n                      : `${Math.floor(100 / Number(bondStat.priceInDollars) - 100)}% return when TOMB > 1.1FTM`\r\n                  }\r\n                  onExchange={handleBuyBonds}\r\n                  disabled={!bondStat || isBondRedeemable}\r\n                />\r\n              </StyledCardWrapper>\r\n              <StyledStatsWrapper>\r\n                <ExchangeStat\r\n                  tokenName=\"TOMB\"\r\n                  description=\"Last-Hour TWAP Price\"\r\n                  price={getDisplayBalance(cashPrice, 18, 2)}\r\n                />\r\n                <Spacer size=\"md\" />\r\n                <ExchangeStat\r\n                  tokenName=\"TBOND\"\r\n                  description=\"Current Price: (TOMB)^2\"\r\n                  price={Number(bondStat?.tokenInFtm).toFixed(2) || '-'}\r\n                />\r\n              </StyledStatsWrapper>\r\n              <StyledCardWrapper>\r\n                <ExchangeCard\r\n                  action=\"Redeem\"\r\n                  fromToken={tombFinance.TBOND}\r\n                  fromTokenName=\"TBOND\"\r\n                  toToken={tombFinance.DANTE}\r\n                  toTokenName=\"TOMB\"\r\n                  priceDesc={`${getDisplayBalance(bondBalance)} TBOND Available`}\r\n                  onExchange={handleRedeemBonds}\r\n                  disabled={!bondStat || bondBalance.eq(0) || !isBondRedeemable}\r\n                  disabledDescription={!isBondRedeemable ? `Enabled when TOMB > ${BOND_REDEEM_PRICE}FTM` : null}\r\n                />\r\n              </StyledCardWrapper>\r\n            </StyledBond>\r\n          </>\r\n        ) : (\r\n          <UnlockWallet />\r\n        )}\r\n      </Page>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nconst StyledBond = styled.div`\r\n  display: flex;\r\n  margin-top: 40px;\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n    flex-flow: column nowrap;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nconst StyledCardWrapper = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  @media (max-width: 768px) {\r\n    width: 80%;\r\n  }\r\n`;\r\n\r\nconst StyledStatsWrapper = styled.div`\r\n  display: flex;\r\n  flex: 0.8;\r\n  margin: 0 20px;\r\n  flex-direction: column;\r\n\r\n  @media (max-width: 768px) {\r\n    width: 80%;\r\n    margin: 16px 0;\r\n  }\r\n`;\r\n\r\nexport default Pit;\r\n"],"sourceRoot":""}